// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Duke1 is Room

constants:

   include blakston.khd

   TO_ROW = 80
   TO_COL = 33

resources:

   include duke1.lkod

   room_name_Duke1 = "The Courtyard of Blackstone Keep"
   room_Duke1 = duke1.roo
   Duke1_music = area01.ogg

   fountain_soundDuke1 = fountain.ogg

classvars:

   vrName = room_name_Duke1

   viTeleport_row = 80
   viTeleport_col = 33
   viTerrain_Type = TERRAIN_CASTLE | TERRAIN_FIELDS | TERRAIN_FOUNTAIN

   viWeatherZone = WEATHER_ZONE_TOS

properties:

   prRoom = room_Duke1
   piRoom_num = RID_DUKE1

   piBaseLight = LIGHT_NICE
   piOutside_factor = 8

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

   prMusic = Duke1_music

   pbSnowGroundTexture = TRUE

messages:

   Constructed()
   {
      plLooping_sounds = [[ fountain_soundDuke1, 31, 28 ]];
      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

  /// TO TOWN

      plExits = Cons([ 81, 33, RID_TOS, 13, 18, ROTATE_NONE ],plExits);
      plExits = Cons([ 80, 33, RID_TOS, 13, 18, ROTATE_NONE ],plExits);

      plExits = Cons([ 50, 33, RID_DUKE2, 39, 16, ROTATE_NONE ],plExits);
      plExits = Cons([ 51, 32, RID_DUKE2, 39, 16, ROTATE_NONE ],plExits);
      plExits = Cons([ 50, 32, RID_DUKE2, 39, 16, ROTATE_NONE ],plExits);

      plExits = Cons([ 51, 46, RID_DUKE2, 42, 28, ROTATE_NONE ],plExits);
      plExits = Cons([ 51, 47, RID_DUKE2, 42, 28, ROTATE_NONE ],plExits);

      plExits = Cons([ 51, 20, RID_DUKE2, 42, 2, ROTATE_NONE ],plExits);
      plExits = Cons([ 51, 21, RID_DUKE2, 42, 2, ROTATE_NONE ],plExits);

      plExits = Cons([ 30, 32, RID_DUKE2, 2, 16, ROTATE_NONE ],plExits);
      plExits = Cons([ 29, 33, RID_DUKE2, 2, 16, ROTATE_NONE ],plExits);

      propagate;
   }

   CreateStandardObjects()
   {
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=5),#new_row=14,#new_col=28,
           #fine_row=00,#fine_col=00);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=5),#new_row=14,#new_col=31,
           #fine_row=00,#fine_col=00);
      Send(self,@NewHold,#what=Create(&Firepit),#new_row=23,#new_col=34,
           #fine_row=56,#fine_col=56);
      Send(self,@NewHold,#what=Create(&Firepit),#new_row=23,#new_col=24,
           #fine_row=56,#fine_col=8);

      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0),#new_row=23,#new_col=31,
           #fine_row=56,#fine_col=00);
      Send(self,@NewHold,#what=Create(&Firepit,#iSoundRadius=0),#new_row=23,#new_col=28,
           #fine_row=56,#fine_col=00);

      Send(self,@NewHold,#what=Create(&Dukeguard),#new_row=72,#new_col=32,
           #fine_row=0,#fine_col=0,#new_angle=ANGLE_NORTH_WEST);
      Send(self,@NewHold,#what=Create(&Dukeguard),#new_row=72,#new_col=27,
           #fine_row=0,#fine_col=0,#new_angle=ANGLE_NORTH_EAST);

      propagate;
   }

   StartSnow(bOnGround=TRUE)
   {
      // Check if we can have weather effects here.
      if NOT pbWeatherEffects
      {
         return;
      }

      if bOnGround
      {
         if pbSnowGroundTexture
         {
            // Add snow to lighting sectors.
            Send(self,@ChangeTexture,#id=1,#new_texture=61016,#flags=CTF_FLOOR);
            Send(self,@ChangeTexture,#id=2,#new_texture=61016,#flags=CTF_FLOOR);
         }
      }

      // Propagate to Room, do the rest there.
      propagate;
   }

   EndSnow(override=FALSE)
   "Use override if rooms have manually placed textures."
   {
      if Send(self,@CheckRoomFlag,#flag=ROOM_SNOWING)
      {
         Send(self,@SetRoomFlag,#flag=ROOM_SNOWING,#value=FALSE);
         Send(self,@WeatherChanged);
      }

      if pbSnowGroundTexture
         OR override
      {
         // Remove snow from lighting sectors.
         Send(self,@RemoveTextureChange,#id=1);
         Send(self,@RemoveTextureChange,#id=2);
      }

      // Propagate to Room, do the rest there.
      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
